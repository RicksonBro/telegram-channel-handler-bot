import openpyxl
import telebot
from telebot import types

bot = telebot.TeleBot('6835896919:AAFOgrmeuuGGBWogym_aU5sqsHHseN-ay6Y')
channel_id = "-1001371818863"
excel_file_path = "products.xlsx"

user_data = {}

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    send_post_button = types.KeyboardButton('üì¢–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç')
    show_template_button = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å —à–∞–±–ª–æ–Ω')
    update_template_button = types.KeyboardButton('üîÑ–û–±–Ω–æ–≤–∏—Ç—å —à–∞–±–ª–æ–Ω')
    markup.add(send_post_button)
    markup.add(update_template_button, show_template_button)
    bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <b>excel</b> —Ñ–∞–π–ª.\n–í–≤–µ–¥–∏—Ç–µ <b>/help</b> –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", parse_mode='html', reply_markup=markup)
    user_data[message.chat.id] = {'products': [], 'medias': [], 'itera': 0}

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, f"–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤—å—Ç–µ excel —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏. –ü–æ—Å–ª–µ —á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∫ –ø–æ—Å—Ç—É –∏ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ üì¢<b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç</b>. –ë–æ—Ç –±—É–¥–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Ñ–æ—Ç–æ —Å—Ç–æ–ª—å–∫–æ —Ä–∞–∑ —Å–∫–æ–ª—å–∫–æ –∫–æ–ª-–≤–æ —Å—Ç—Ä–æ–∫ –≤ excel —Ñ–∞–π–ª–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö.\nüì¢<b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç</b> - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª, –µ—Å–ª–∏ –µ—Å—Ç—å excel –¥–∞–Ω–Ω—ã–µ –∏ —Ñ–æ—Ç–æ\n<b>–ü–æ–∫–∞–∑–∞—Ç—å —à–∞–±–ª–æ–Ω</b> - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω –ø–æ—Å—Ç–∞\nüîÑ<b>–û–±–Ω–æ–≤–∏—Ç—å —à–∞–±–ª–æ–Ω</b> - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –ø–æ—Å—Ç–æ–≤\n<b>/delete_history</b> - —Å–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –µ–∫—Å–µ–ª—è –∏ –æ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö", parse_mode='html')

def read_excel(file_path):
    workbook = openpyxl.load_workbook(file_path)
    sheet = workbook.active

    data = []
    header = [cell.value for cell in sheet[1]]  # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    for row in sheet.iter_rows(min_row=2, values_only=True):
        product = dict(zip(header, row))
        data.append(product)
    return data

@bot.message_handler(func=lambda message: message.text == '–ü–æ–∫–∞–∑–∞—Ç—å —à–∞–±–ª–æ–Ω')
def show_template(message):
    with open(f'text.txt', 'r', encoding="utf8") as template:
        post_text = ''
        for char in template:
            post_text += char
        post_text = post_text.replace(r'\n', '\n')
        bot.send_message(message.chat.id, post_text)
    
@bot.message_handler(func=lambda message: message.text == 'üîÑ–û–±–Ω–æ–≤–∏—Ç—å —à–∞–±–ª–æ–Ω')
def change_template(message):
    bot.send_message(message.chat.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –ø–æ—Å—Ç–æ–≤", parse_mode='markdown')
    bot.register_next_step_handler(message, update_template)

def update_template(message):
    try:
        new_templ = message.text
        new_templ = new_templ.replace('\n', '\\n')
        filename = f"text.txt"
        with open(filename, 'w', encoding="utf8") as templ:
            templ.write(new_templ)
        bot.send_message(message.chat.id, f"‚úÖ–®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω", parse_mode='markdown')
    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(commands=['delete_history'])
def delete_history(message):
    try:
        user_data[message.chat.id]['products'] = []
        user_data[message.chat.id]['medias'] = []
        user_data[message.chat.id]['itera'] = 0
        bot.send_message(message.chat.id, f"‚úÖüóë–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞!", parse_mode='html')
    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(content_types=['document'])
def handle_document(message):
    try:
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        temp_file_path = "temp.xlsx"
        with open(temp_file_path, 'wb') as new_file:
            new_file.write(downloaded_file)
        global products
        user_data[message.chat.id]['products'] = read_excel(temp_file_path)
        bot.send_message(message.chat.id, f"–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ {user_data[message.chat.id]['products'][user_data[message.chat.id]['itera']]['–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞']}:")
        
    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(func=lambda message: message.text == 'üì¢–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç')
def send_post(message):
    user_id = message.chat.id
    if len(user_data[user_id]['products']) == 0:
        bot.send_message(user_id, f"–û—Ç—Å—Ç—É—Ç—Å–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ excel —Ñ–∞–π–ª–∞")
    elif len(user_data[user_id]['medias']) == 0:
        bot.send_message(user_id, f"–í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏")
    else:
        with open('text.txt', 'r', encoding="utf8") as text:
            post_text = ''
            for char in text:
                post_text += char

        current_product = user_data[user_id]['products'][user_data[user_id]['itera']]
            
        if current_product['–ì–∞—Ä–∞–Ω—Ç–∏—è'] == None:
            garant_i = post_text.index("–ì–∞—Ä–∞–Ω—Ç–∏—è")
            start = post_text.find(r"\n–ì–∞—Ä–∞–Ω—Ç–∏—è")
            end = post_text.find(r"\n", garant_i, len(post_text) - 1) + 2
            post_text = post_text.replace(post_text[start:end], "")
        
        if current_product['–¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π'] == None:
            discount_i = post_text.index("–ü—Ä–∏ –û–ø–ª–∞—Ç–µ")
            start = post_text.find(r"\n–ü—Ä–∏ –û–ø–ª–∞—Ç–µ")
            end = post_text.find(r"\n", discount_i, len(post_text) - 1) - 1
            post_text = post_text.replace(post_text[start:end], "")

        post_text = post_text.replace(r"\n", "\n")
        user_data[user_id]['medias'][0].caption = post_text.format(
            –ù–∞–∑–≤–∞–Ω–∏–µ_—Ç–æ–≤–∞—Ä–∞=current_product['–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'],
            –¶–µ–Ω–∞=current_product['–¶–µ–Ω–∞'],
            –¶–µ–Ω–∞_—Å–æ_—Å–∫–∏–¥–∫–æ–π=current_product['–¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π'],
            –ì–∞—Ä–∞–Ω—Ç–∏—è=current_product['–ì–∞—Ä–∞–Ω—Ç–∏—è'],
            –ê–¥—Ä–µ—Å=current_product['–ê–¥—Ä–µ—Å']
        )
        bot.send_media_group(channel_id, user_data[user_id]['medias'])
        user_data[user_id]['medias'] = []

        if user_data[user_id]['itera'] == len(user_data[user_id]['products']) - 1:
            user_data[user_id]['itera'] = 0
            user_data[user_id]['products'] = []
        else:
            user_data[user_id]['itera'] += 1
            bot.send_message(user_id, f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ <u>{user_data[user_id]['products'][user_data[user_id]['itera']]['–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞']}</u>")

# def work_with_photo(message):
#     user_id = message.chat.id
#     if message.photo:
#         handle_photo(user_id, message)
#     else:
#         bot.send_message(user_id, "–í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∞–π–ª–∞ —Å–Ω–æ–≤–∞.")


@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    try:
        user_id = message.chat.id
        photo_id = message.photo[-1].file_id
        user_data[user_id]['medias'].append(telebot.types.InputMediaPhoto(photo_id)) 
        bot.send_message(user_id, "–ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    except Exception as e:
        bot.send_message(user_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
    

if __name__ == "__main__":
    bot.polling(none_stop=True)
# import time
# import telebot
# from telebot import types

# # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
# TOKEN = '6835896919:AAFOgrmeuuGGBWogym_aU5sqsHHseN-ay6Y'
# bot = telebot.TeleBot(TOKEN)
# lst = []

# @bot.message_handler(content_types=['photo'])
# def handle_photo(message):
#     # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
#     chat_id = "-1001371818863"
    
#     photo_id = message.photo[-1].file_id
#     global lst

#     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#     while message.photo:
#         time.sleep(5)
#         lst.append(photo_id)

#     bot.send_photo(chat_id, photo_id)
#     print(message.photo[-1].file_id)
#     print(type(message.photo))

# # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
# bot.polling(none_stop=True)


